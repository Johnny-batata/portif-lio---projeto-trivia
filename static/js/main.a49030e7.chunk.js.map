{"version":3,"sources":["images/ampulheta.gif","services/fetchApi.js","pages/Home.jsx","services/fetchImageGravatar.js","components/Questions.jsx","actions/index.js","pages/Game.jsx","pages/Settings.jsx","pages/Feedback.jsx","pages/Ranking.jsx","App.js","serviceWorker.js","reducers/user.js","reducers/controls.js","reducers/index.js","store/index.js","index.js"],"names":["module","exports","FetchApiResolved","perguntas","token","a","async","fetch","response","json","data","FetchApi","localStorage","setItem","Home","props","state","name","email","buttonReady","isRedirect","handleChange","bind","emailVerify","onClick","handleFormLabel","this","player","assertions","score","gravatarEmail","setState","JSON","stringify","length","target","value","className","htmlFor","id","onChange","data-testid","type","placeholder","disabled","to","Component","FetchImageGravatar","hash","md5","toString","url","CORRECT_ANSWER","Questions","answers","indice","disable","timer","updtadeQuestions","checkAnswer","renderQuestions","renderQuestion","nextQuestion","clearStyles","renderNextQuestionButton","freezedByTimer","updateLocalStorage","setAnswersProperties","renderAnswers","then","wrongAnswers","incorrect_answers","map","answer","index","testid","correct_answer","sort","Math","random","prev","document","querySelectorAll","forEach","button","classList","remove","dados","parse","getItem","results","questionLevel","difficulty","questionScore","LEVEL","updateScore","buttons","add","calcQuestionScore","setInterval","regress","key","replace","category","question","src","Imagem","alt","React","connect","controls","dispatch","toggleEnable","payload","Game","updateState","header","Settings","Feedback","scoreFeedback","createRanking","recovery","ranking","picture","push","b","Ranking","jogador","App","exact","path","component","Boolean","window","location","hostname","match","initialState","user","INITIAL_STATE","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","basename","process","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a49030e7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ampulheta.06137282.gif\";","async function FetchApiResolved(perguntas, token) {\n  const response = await\n  fetch(`https://opentdb.com/api.php?amount=${perguntas}&token=${token}`);\n  const data = await response.json();\n  // console.log(data);\n  // localStorage.setItem('questions', JSON.stringify(data));\n  return data;\n}\n\nexport default async function FetchApi() {\n  const response = await fetch('https://opentdb.com/api_token.php?command=request');\n  const data = await response.json();\n  const NUMBER_OF_QUESTIONS = 5;\n  // console.log(typeof (data.token));\n  localStorage.setItem('token', data.token);\n  return FetchApiResolved(NUMBER_OF_QUESTIONS, data.token);\n}\n","import React, { Component } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\n// import logo from './trivia.png';\nimport './Home.css';\n\nimport FetchApi from '../services/fetchApi';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: '',\n      email: '',\n      buttonReady: false,\n      isRedirect: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.emailVerify = this.emailVerify.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.handleFormLabel = this.handleFormLabel.bind(this);\n  }\n\n  onClick() {\n    // console.log('batata');\n    const { name, email } = this.state;\n    FetchApi();\n    const player = { player: {\n      name,\n      assertions: 0,\n      score: 0,\n      gravatarEmail: email,\n    } };\n\n    this.setState({ isRedirect: true });\n    localStorage.setItem('state', JSON.stringify(player));\n    // localStorage.setItem('email', email);\n  }\n\n  emailVerify() {\n    const { name, email } = this.state;\n\n    if (name.length > 0 && email.length > 0) {\n      return this.setState({ buttonReady: true });\n    }\n    return this.setState({ buttonReady: false });\n  }\n\n  handleChange({ target: { value, name } }) {\n    this.emailVerify();\n    this.setState({ [name]: value });\n  }\n\n  handleFormLabel() {\n    return (\n      <>\n        <label className=\"labels-input\" htmlFor=\"name\">\n          Nome\n          <input\n            className=\"config-input\"\n            id=\"name\"\n            name=\"name\"\n            onChange={ this.handleChange }\n            data-testid=\"input-player-name\"\n            type=\"text\"\n            placeholder=\"Digite seu nome\"\n          />\n        </label>\n        <label className=\"labels-input\" htmlFor=\"email\">\n          Email\n          <input\n            className=\"config-input\"\n            id=\"email\"\n            name=\"email\"\n            data-testid=\"input-gravatar-email\"\n            onChange={ this.handleChange }\n            type=\"email\"\n            placeholder=\"Digite seu email\"\n          />\n        </label>\n      </>);\n  }\n\n  render() {\n    const { handleFormLabel } = this;\n    const { buttonReady, isRedirect } = this.state;\n    return (\n      <div className=\"main\">\n\n        <span className=\"bem-vindo\"> Bem vindo </span>\n        <span className=\"bem-vindo2\">Trybe Quiz </span>\n\n        <section className=\"form-login\">\n\n          {handleFormLabel()}\n\n          <button\n            type=\"button\"\n            disabled={ !buttonReady }\n            data-testid=\"btn-play\"\n            onClick={ this.onClick }\n          >\n            {' '}\n            JOGAR\n            {' '}\n\n          </button>\n          {isRedirect && <Redirect to=\"/game\" />}\n\n          <div className=\"settings\">\n            <Link to=\"/settings\">\n              <button\n                className=\"btn-settings\"\n                type=\"button\"\n                data-testid=\"btn-settings\"\n              >\n                {' '}\n                CONFIGURAÇÕES\n\n              </button>\n            </Link>\n          </div>\n        </section>\n\n      </div>\n    );\n  }\n}\nexport default Home;\n","import md5 from 'crypto-js/md5';\n\nexport default async function FetchImageGravatar(email) {\n  const hash = md5(email).toString();\n  // console.log(hash);\n  const response = await fetch(`https://www.gravatar.com/avatar/${hash}`);\n  const data = await response;\n  // console.log(data.url);\n\n  return data.url;\n  // localStorage.setItem('token', data.token);\n  // return FetchApiResolved(NUMBER_FIVE, data.token);\n}\n","import React from 'react';\nimport { Redirect } from 'react-router';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport FetchApi from '../services/fetchApi';\nimport '../App.css';\nimport { enableDisable } from '../actions';\nimport Imagem from '../images/ampulheta.gif';\nimport './Question.css';\n\nconst LEVEL = 2;\nconst RAMDOM = 0.5;\nconst MIN_SCORE = 10;\nconst ONE_SECOND = 1000;\nconst TIME_TO_ANSWER = 30;\nconst NUMBER_OF_QUESTIONS = 5;\nconst CORRECT_ANSWER = 'correct-answer';\n\nclass Questions extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      perguntas: [],\n      answers: [],\n      assertions: 0,\n      indice: 0,\n      disable: props.disable,\n      timer: TIME_TO_ANSWER,\n      score: 0,\n      isRedirect: false,\n    };\n    this.updtadeQuestions = this.updtadeQuestions.bind(this);\n    this.checkAnswer = this.checkAnswer.bind(this);\n    this.renderQuestions = this.renderQuestion.bind(this);\n    this.timer = this.timer.bind(this);\n    this.nextQuestion = this.nextQuestion.bind(this);\n    this.clearStyles = this.clearStyles.bind(this);\n    this.renderNextQuestionButton = this.renderNextQuestionButton.bind(this);\n    this.freezedByTimer = this.freezedByTimer.bind(this);\n    // this.calcDificult = this.calcDificcultyLevel.bind(this);\n    this.updateLocalStorage = this.updateLocalStorage.bind(this);\n    this.setAnswersProperties = this.setAnswersProperties.bind(this);\n    this.renderAnswers = this.renderAnswers.bind(this);\n  }\n\n  componentDidMount() {\n    FetchApi().then((data) => this.updtadeQuestions(data));\n    this.timer();\n  }\n\n  setAnswersProperties() {\n    const { perguntas, indice } = this.state;\n    const wrongAnswers = perguntas[indice].incorrect_answers.map((answer, index) => ({\n      answer,\n      name: 'wrong-answer',\n      testid: `wrong-answer-${index}`,\n    }));\n    const answers = (\n      [\n        {\n          answer: `${perguntas[indice].correct_answer}`,\n          name: CORRECT_ANSWER,\n          testid: CORRECT_ANSWER,\n        },\n        ...wrongAnswers,\n      ].sort(() => Math.random() - RAMDOM) // https://stackoverflow.com/questions/49555273/how-to-shuffle-an-array-of-objects-in-javascript\n    );\n    this.setState({\n      answers,\n    });\n  }\n\n  nextQuestion() {\n    const { indice } = this.state;\n    if (indice + 1 === NUMBER_OF_QUESTIONS) return this.setState({ isRedirect: true });\n    this.setState((prev) => ({\n      indice: prev.indice + 1,\n      timer: TIME_TO_ANSWER,\n      disable: false,\n    }), () => this.setAnswersProperties());\n    this.clearStyles();\n  }\n\n  clearStyles() {\n    const buttons = document.querySelectorAll('.default');\n    buttons.forEach((button) => {\n      button.classList.remove('green-border');\n      button.classList.remove('red-border');\n    });\n  }\n\n  updtadeQuestions(perguntas) {\n    const dados = JSON.parse(localStorage.getItem('state'));\n    this.setState({ perguntas: perguntas.results, score: dados.player.score },\n      () => this.setAnswersProperties());\n  }\n\n  calcQuestionScore() {\n    const { indice, perguntas } = this.state;\n    const { timer } = this.props;\n\n    let questionLevel = perguntas[indice].difficulty;\n    if (questionLevel === 'hard') {\n      questionLevel = LEVEL + 1;\n    } else if (questionLevel === 'medium') {\n      questionLevel = LEVEL;\n    } else {\n      questionLevel = LEVEL - 1;\n    }\n    const questionScore = MIN_SCORE + (timer * questionLevel);\n    this.setState((prev) => ({\n      score: prev.score + questionScore,\n      assertions: prev.assertions + 1 }), () => this.updateLocalStorage());\n  }\n\n  updateLocalStorage() {\n    const { score, assertions } = this.state;\n    const { updateScore } = this.props;\n    const dados = JSON.parse(localStorage.getItem('state'));\n\n    const player = { player: {\n      name: dados.player.name,\n      assertions,\n      score,\n      gravatarEmail: dados.player.gravatarEmail,\n    } };\n    updateScore(score);\n\n    localStorage.setItem('state', JSON.stringify(player));\n  }\n\n  checkAnswer({ target: { name } }) {\n    const buttons = document.querySelectorAll('.default');\n    this.setState({\n      disable: true,\n    });\n\n    buttons.forEach((button) => {\n      if (button.name === CORRECT_ANSWER) {\n        return button.classList.add('green-border');\n      }\n      return button.classList.add('red-border');\n    });\n\n    if (name === CORRECT_ANSWER) {\n      this.calcQuestionScore();\n    }\n  }\n\n  regress() {\n    const { timer } = this.state;\n    if (timer === 0) this.freezedByTimer();\n    if (timer > 0) return this.setState((prev) => ({ timer: prev.timer - 1 }));\n  }\n\n  timer() {\n    setInterval(() => { this.regress(); }, ONE_SECOND);\n  }\n\n  freezedByTimer() {\n    return this.setState({ disable: true });\n  }\n\n  renderAnswers() {\n    const { answers, disable } = this.state;\n    return answers.map(({ answer, name, testid }, index) => (\n      <button\n        key={ index }\n        type=\"button\"\n        data-testid={ testid }\n        name={ name }\n        disabled={ disable }\n        className=\"default btn-answer\"\n        onClick={ this.checkAnswer }\n      >\n        { answer.replace(/&quot;/g, '\"').replace(/&#039;/g, '\\'') }\n      </button>\n    ));\n  }\n\n  renderQuestion() {\n    const { perguntas, indice, timer } = this.state;\n    const { category, question } = perguntas[indice];\n    return (\n      <div className=\"conteudo\">\n        <div className=\"sideA\">\n          <p className=\"question-now\" data-testid=\"question-text\">\n            {`Pergunta: ${question\n              .replace(/&quot;/g, '\"')\n              .replace(/&#039;/g, '\\'')}`}\n\n          </p>\n          <p className=\"question-category-now\" data-testid=\"question-category\">{`Categoria ${category}`}</p>\n        </div>\n        <div className=\"sideB\">\n          <div className=\"timmer\">\n            { `00:${timer >= MIN_SCORE ? timer : `0${timer}`}` }\n            {timer > 0\n              && <img className=\"imagem\" src={ Imagem } alt=\"img\" />}\n          </div>\n          <div className=\"answers\">\n            {this.renderAnswers()}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderNextQuestionButton() {\n    const { disable, timer } = this.state;\n    if (disable || !timer) {\n      return (\n        <button\n          className=\"btn-next\"\n          type=\"button\"\n          disabled={ !disable }\n          data-testid=\"btn-next\"\n          onClick={ this.nextQuestion }\n        >\n          Próxima pergunta\n        </button>\n      );\n    }\n  }\n\n  render() {\n    const { perguntas, isRedirect } = this.state;\n    if (perguntas.length < 1) return <p>Carregando...</p>;\n    return (\n      <div className=\"form-questions\">\n        { isRedirect && <Redirect to=\"/feedback\" />}\n        { this.renderQuestion() }\n        { this.renderNextQuestionButton() }\n      </div>\n    );\n  }\n}\n\nQuestions.propTypes = {\n  disable: PropTypes.bool.isRequired,\n  timer: PropTypes.number.isRequired,\n  updateScore: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  disable: state.controls.disable,\n  timer: state.controls.timer,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  toggleEnable: (value) => dispatch(enableDisable(value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Questions);\n","export const ENABLE_CONTROL = 'ENABLE_CONTROL';\nexport const UPDATE_TIMER = 'UPDATE_TIMER';\nexport const RESTART_TIMER = 'RESTART_TIMER';\n\nexport const enableDisable = (disable) => ({\n  type: ENABLE_CONTROL,\n  payload: disable,\n});\n\nexport const updateTimer = (value) => ({\n  type: UPDATE_TIMER,\n  payload: value,\n});\n\nexport const timerRestart = () => ({\n  type: RESTART_TIMER,\n});\n","import React, { Component } from 'react';\nimport FetchImageGravatar from '../services/fetchImageGravatar';\nimport Questions from '../components/Questions';\nimport './Game.css';\n\nexport default class Game extends Component {\n  constructor() {\n    super();\n    this.state = {\n      url: '',\n      score: 0,\n      name: '',\n    };\n    this.updateState = this.updateState.bind(this);\n    this.header = this.header.bind(this);\n    this.updateScore = this.updateScore.bind(this);\n  }\n\n  componentDidMount() {\n    const name = JSON.parse(localStorage.getItem('state'));\n    this.updateState(name);\n  }\n\n  updateScore(props) {\n    this.setState((prev) => ({\n      ...prev, score: props,\n    }));\n  }\n\n  async updateState(name) {\n    await FetchImageGravatar(name.player.gravatarEmail)\n      .then((data) => this.setState({ url: data }));\n    this.setState({ score: name.player.score });\n    this.setState({ name: name.player.name });\n  }\n\n  header() {\n    const { url, score, name } = this.state;\n    return (\n      <header>\n        <div className=\"header-sideA\">\n          <img\n            src={ url }\n            alt=\"player.jpeg\"\n            data-testid=\"header-profile-picture\"\n          />\n        </div>\n        <div className=\"header-sideB\">\n          <div className=\"side-b1\">\n            <span\n              data-testid=\"header-player-name\"\n            >\n              {`Usuário: ${name}`}\n\n            </span>\n            <span\n              data-testid=\"header-score\"\n            >\n              {`Pontuação: ${score}`}\n\n            </span>\n          </div>\n          <div className=\"side-b2\">\n            <span className=\"trybeQuiz\">\n              Trybe Quiz\n            </span>\n          </div>\n        </div>\n      </header>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"content\">\n        {this.header()}\n        <Questions updateScore={ this.updateScore } />\n      </div>\n    );\n  }\n}\n\n// export default game;\n","import React, { Component } from 'react';\n\nclass Settings extends Component {\n  render() {\n    return (\n\n      <div>\n        <h1 data-testid=\"settings-title\"> Bem vindo as configurações.   </h1>\n      </div>\n    );\n  }\n}\n\nexport default Settings;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport FetchImageGravatar from '../services/fetchImageGravatar';\nimport './Feedback.css';\n\nclass Feedback extends Component {\n  constructor() {\n    super();\n    this.state = {\n      url: '',\n      score: 0,\n      name: '',\n      assertions: 0,\n    };\n    this.updateState = this.updateState.bind(this);\n    this.header = this.header.bind(this);\n    this.scoreFeedback = this.scoreFeedback.bind(this);\n    this.createRanking = this.createRanking.bind(this);\n  }\n\n  componentDidMount() {\n    const name = JSON.parse(localStorage.getItem('state'));\n    // console.log(name);\n    this.updateState(name);\n  }\n\n  createRanking() {\n    const { url, score, name } = this.state;\n    const recovery = JSON.parse(localStorage.getItem('ranking')) || [];\n\n    const ranking = {\n      name,\n      score,\n      picture: url,\n    };\n\n    recovery.push(ranking);\n    recovery.sort((a, b) => b.score - a.score);\n    localStorage.setItem('ranking', JSON.stringify(recovery));\n  }\n\n  async updateState(name) {\n    await FetchImageGravatar(name.player.gravatarEmail)\n      .then((data) => this.setState({ url: data }));\n    this.setState({ score: name.player.score });\n    this.setState({ name: name.player.name });\n    this.setState({ assertions: name.player.assertions });\n  }\n\n  scoreFeedback() {\n    const { assertions } = this.state;\n    const THREE = 3;\n    if (assertions < THREE) {\n      return (\n        <p data-testid=\"feedback-text\">\n          Podia ser melhor...\n        </p>\n      );\n    }\n    return (\n      <p data-testid=\"feedback-text\">\n        Mandou bem!\n      </p>\n    );\n  }\n\n  header() {\n    const { url, score, name } = this.state;\n    return (\n      <header>\n        <div className=\"header-sideA\">\n          <img\n            src={ url }\n            alt=\"player.jpeg\"\n            data-testid=\"header-profile-picture\"\n          />\n        </div>\n        <div className=\"header-sideB\">\n          <div className=\"side-b1\">\n            <span\n              data-testid=\"header-player-name\"\n            >\n              {`Usuário: ${name}`}\n\n            </span>\n            <span\n              data-testid=\"header-score\"\n\n            >\n              {`Pontuação: ${score}`}\n\n            </span>\n          </div>\n          <div className=\"side-b2\">\n            <span className=\"trybeQuiz\">\n              Trybe Quiz\n            </span>\n          </div>\n        </div>\n      </header>\n    );\n  }\n\n  render() {\n    const { assertions, score } = this.state;\n    return (\n      <div className=\"main-feedback\">\n        { this.header() }\n        { this.scoreFeedback() }\n        <p>{`Questões corretas: ${assertions}`}</p>\n        <p data-testid=\"feedback-total-score\">{ `Pontuação: ${score}` }</p>\n        <Link to=\"/\">\n          <button data-testid=\"btn-play-again\" type=\"button\">Jogar novamente</button>\n        </Link>\n        <Link to=\"/ranking\">\n          <button\n            data-testid=\"btn-ranking\"\n            onClick={ this.createRanking }\n            type=\"button\"\n          >\n            Ver Ranking\n\n          </button>\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default Feedback;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Ranking.css';\n\nclass Ranking extends Component {\n  render() {\n    const recovery = JSON.parse(localStorage.getItem('ranking'));\n\n    return (\n      <div className=\"main-ranking\">\n        <p className=\"ranking-trybe-quiz\" data-testid=\"ranking-title\">Ranking Trybe Quiz</p>\n        <div className=\"conteudo-ranking\">\n          {\n            recovery.map((jogador, index) => (\n              <section className=\"content-ranking\" key={ jogador.name }>\n                <div className=\"ranking-sideA\">\n                  <img className=\"img-ranking\" src={ jogador.picture } alt={ jogador.name } />\n                </div>\n                <div className=\"ranking-sideB\">\n                  <span>{`Posição: ${(index + 1)}`}</span>\n                  <span data-testid={ `player-name-${index}` }>{`Jogador: ${jogador.name}`}</span>\n                  <span data-testid={ `player-score-${index}` }>{`Pontuação: ${jogador.score}`}</span>\n                </div>\n              </section>))\n          }\n        </div>\n        <Link to=\"/\">\n          <button\n            className=\"go-to-home\"\n            data-testid=\"btn-go-home\"\n            type=\"button\"\n          >\n            Início\n          </button>\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default Ranking;\n","import React from 'react';\n\nimport { Route, Switch } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Game from './pages/Game';\nimport Settings from './pages/Settings';\nimport Feedback from './pages/Feedback';\nimport Ranking from './pages/Ranking';\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <Switch>\n        <Route exact path=\"/\" component={ Home } />\n        <Route exact path=\"/game\" component={ Game } />\n        <Route exact path=\"/settings\" component={ Settings } />\n        <Route exact path=\"/feedback\" component={ Feedback } />\n        <Route exact path=\"/ranking\" component={ Ranking } />\n      </Switch>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n  user: {\n    email: '',\n  },\n};\n\nexport default function user(state = initialState, action) {\n  switch (action.type) {\n  default:\n    return state;\n  }\n}\n","import { ENABLE_CONTROL, RESTART_TIMER, UPDATE_TIMER } from '../actions';\n\nconst TIME_TO_ANSWER = 8;\n\nconst INITIAL_STATE = {\n  disable: false,\n  timer: TIME_TO_ANSWER,\n};\n\nexport default function controls(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case ENABLE_CONTROL:\n    return {\n      ...state,\n      disable: action.payload,\n    };\n  case UPDATE_TIMER:\n    return {\n      ...state,\n      timer: action.payload,\n    };\n  case RESTART_TIMER:\n    return {\n      ...state,\n      timer: TIME_TO_ANSWER,\n    };\n  default:\n    return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport user from './user';\nimport controls from './controls';\n\nconst rootReducer = combineReducers({\n  controls,\n  user,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from '../reducers';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <BrowserRouter basename={ process.env.PUBLIC_URL }>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}